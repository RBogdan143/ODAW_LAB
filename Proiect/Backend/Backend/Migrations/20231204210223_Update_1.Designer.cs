// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20231204210223_Update_1")]
    partial class Update_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Cos_Cumparaturi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Cos");
                });

            modelBuilder.Entity("Backend.Models.Discounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cos_CumparaturiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount_Percent")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Promo_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cos_CumparaturiId")
                        .IsUnique();

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Backend.Models.Produse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cos_CumparaturiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Cos_CumparaturiId");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("Backend.Models.Stoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Nr_Produse")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stocul");
                });

            modelBuilder.Entity("Backend.Models.StocProdus", b =>
                {
                    b.Property<Guid>("ProdusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StocId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProdusId", "StocId");

                    b.HasIndex("StocId");

                    b.ToTable("StocProduse");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Models.Discounts", b =>
                {
                    b.HasOne("Backend.Models.Cos_Cumparaturi", "Cos_Redus")
                        .WithOne("Discount")
                        .HasForeignKey("Backend.Models.Discounts", "Cos_CumparaturiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cos_Redus");
                });

            modelBuilder.Entity("Backend.Models.Produse", b =>
                {
                    b.HasOne("Backend.Models.Cos_Cumparaturi", "Cos")
                        .WithMany("Produse_Alese")
                        .HasForeignKey("Cos_CumparaturiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cos");
                });

            modelBuilder.Entity("Backend.Models.StocProdus", b =>
                {
                    b.HasOne("Backend.Models.Produse", "Produs")
                        .WithMany("StocProduse")
                        .HasForeignKey("ProdusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Stoc", "Stoc")
                        .WithMany("StocProduse")
                        .HasForeignKey("StocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");

                    b.Navigation("Stoc");
                });

            modelBuilder.Entity("Backend.Models.Cos_Cumparaturi", b =>
                {
                    b.Navigation("Discount")
                        .IsRequired();

                    b.Navigation("Produse_Alese");
                });

            modelBuilder.Entity("Backend.Models.Produse", b =>
                {
                    b.Navigation("StocProduse");
                });

            modelBuilder.Entity("Backend.Models.Stoc", b =>
                {
                    b.Navigation("StocProduse");
                });
#pragma warning restore 612, 618
        }
    }
}
